#!/usr/bin/env python3

from apds9960.const import *
from apds9960 import APDS9960
import argparse
import importlib.machinery
import smbus
import uinput
import logging
from time import sleep

# enable logging
logging.basicConfig(format='%(asctime)s %(module)s %(levelname)s: %(message)s', level=logging.INFO)

# parse opts and load config
parser = argparse.ArgumentParser()
parser.add_argument("-c", "--config", help="config file", default="/etc/apds-gesture-ui.conf")
args = parser.parse_args()
config = importlib.machinery.SourceFileLoader("apds_gesture_ui_conf", args.config).load_module()

# setup SMBus
bus = smbus.SMBus(config.I2C_PORT)
apds = APDS9960(bus)

# declare simulated keys
dev = uinput.Device(config.GMAPPINGS.values())

# direction to string
dirs = {
    APDS9960_DIR_NONE: "none",
    APDS9960_DIR_LEFT: "left",
    APDS9960_DIR_RIGHT: "right",
    APDS9960_DIR_UP: "up",
    APDS9960_DIR_DOWN: "down",
    APDS9960_DIR_NEAR: "near",
    APDS9960_DIR_FAR: "far",
}

apds.enableGestureSensor()
while True:
    sleep(config.POLLING_SLEEP)
    if apds.isGestureAvailable():
        motion = apds.readGesture()
        logging.info("readGesture() => {}".format(dirs.get(motion, "unknown")))

        key = config.GMAPPINGS.get(motion, None)
        if key is not None:
            dev.emit_click(key)
